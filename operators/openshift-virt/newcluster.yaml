# apiVersion: hypershift.openshift.io/v1beta1
# kind: HostedCluster
# metadata:
#   name: 'new'
#   namespace: 'clusters'
#   labels:
#     "cluster.open-cluster-management.io/clusterset": 'managed'
# spec:
#   etcd:
#     managed:
#       storage:
#         persistentVolume:
#           size: 8Gi
#           storageClassName: gp3-csi
#         type: PersistentVolume
#     managementType: Managed
#   release:
#     image: quay.io/openshift-release-dev/ocp-release:4.14.29-multi
#   pullSecret:
#     name: pullsecret-cluster-new
#   sshKey:
#     name: sshkey-cluster-new
#   networking:
#     clusterNetwork:
#       - cidr: 10.132.0.0/14
#     serviceNetwork:
#       - cidr: 172.31.0.0/16
#     networkType: OVNKubernetes
# #  controllerAvailabilityPolicy: HighlyAvailable
#   platform:
#     type: KubeVirt
#     kubevirt:
#       baseDomainPassthrough: true
#   infraID: 'new'
#   services:
#   - service: OAuthServer
#     servicePublishingStrategy:
#       type: Route
#   - service: OIDC
#     servicePublishingStrategy:
#       type: Route
#   - service: Konnectivity
#     servicePublishingStrategy:
#       type: Route
#   - service: Ignition
#     servicePublishingStrategy:
#       type: Route
#   - service: Ingress
#     servicePublishingStrategy:
#       type: LoadBalancer
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: pullsecret-cluster-new
#   namespace: clusters
# data:
#   '.dockerconfigjson': eyJhdXRocyI6eyI5NTA5MTYyMjE4NjYuZGtyLmVjci51cy1lYXN0LTEuYW1hem9uYXdzLmNvbSI6eyJhdXRoIjoiUVZkVE9tVjVTbmRaV0d4ellqSkdhMGxxYjJsU1ZrNUlaRzFvZW1SRlozZGpWVEI2VmpCR1MyVkVVa0pTYkZKWVdXdFZNbGxYTVd4VGJFMDFXVk4wVWs5RVpIcGhiWGgzWkZoQk0xSnRXazlPTTJSU1YxVkZjbEp1WjNaT2ExWXpUVlUwZUdSR1NtOVNSemxFVWxab2IxTlZiRTFqTUZvd1MzcGFhVlJ1WkZsbFJURTJWbXMxUkZkVVNqUlhWemxvV2xoc1JGWklhRU5XYTFGM1QwZHZORXg2V25kVGJYUndVWHBzZEZZelpGZGlTRTB3VG01a2IxTlVVak5QVjJzMVdtNXZkbU51VWpGWldHTjRURE5hVG1JeU1IcFpWVXBZVlVoTmNsTlZkRkpXUmxKM1pFZDNOVTR5ZURGaGJXaEdZbGh3Y1U5SVZucGxia1pMVkVoc1lWVllUalphTURsUVVUSk5kbU5yVG5CUk1FcFNaRlZhYm1OWFdtdE5iVGxZVTFkT2JHRnROVlZhVTNSSlUyMWFiMDFGT1haUFIwcHdWbFZ6TldSWGJFUlVNbFY2VWpKa1RGSkZOVWxSVmxZeVV6TlNSRlJWVWxGTlZUVjJUbFZqTTFOdWFHNWhNRm8xWVZkb1ZsbFhUbFJYVjJ4YVlVVndTVm95TVhoWFZtdDRUakpLU1dWdWNFbFRiVkkwVGxSSk5XUkZWa05VTUdSNVZrZEdXR0pHV1hwaFYzaDFaRlZaTkZaRVZuUldWVlpYWTFSR1FsRXhjRTVpUmxVeVVXNWtUVTV0ZEhkV01sSlFZWHBXWVU5V1RYcGllbFV6VVRGT2FFNVZUVFJpYldSMVZUTk9UV0pVYUROVU0xcHpWak5HVkdKRlRuaFJWMFpKVDFNNWJGa3hUa2RSYkdoU1ZtMWFWRnBZUmtOVlZYaGFVMU01YUU1V1RuSlJiWFJUVDFka2ExcEhiRTVOYmtaNlVraGtWVlZxUWxGVlJYaFNaRzFPVlU5R1VtRlNSMDVaWVZkS2JHTklRbTVOUjNkNlVXdEdWbGR0TVVWUFJVb3lWV3hTV0V3eFdrbGtTR3hTV1d0S1dWRnRiRlpPVkdSdVRXeENiRkY2WjNKVVIxSTJVV3RLUzFwRlVrSmplbXd4VWpGV1RWUXpaRWxNZVRselVsWmFNV1JGYXpCTWVscDZZMFp3YVdReWJFVlVWRTV6WW0xb1RXRkhaR2hrUm1oRlkxaFZNazFzYnpKaVYxWnJVak5LV21ORVNrUmxiV1ExWVROU1FsRjZTalpoYlZaclZrYzViVXN4YUVKU1ZVcEtVbXhXV0UxRlJucFhSRXBSV1dzNVVtVnJiRUpVYVRsMlZGVjRWMVJITlRWa01WSlNZekZrTWxVeWFEVk9NMDV4WTFWR01HRlhkRzFTUldoWlZERndhVTVIY0RWalIyeE9WbXMxYVZkRVZsUmtSazVQVVdwR2RtRlhiRmxXV0ZaT1pXNXZlbUpIWkRaVFJHUlZaVmhLZEZOWVVuRlZWbEp1Wld0MGIxWXpUak5aVjJ0eVlqQm9lVlJXU2pGT2JHUXpaRzEwZGxSWE9VNWthM2QzWWpKU2Jrc3dlSHBVTTJSMlZXNWFNa3N6UWpGamFtZDRUakl4YjJGSFpFUmFSa0pZWWxSYU1WTlZUalJMTWpGVVdtNWFTR1JZU210YU1HdzBXVmhXTUZKWFVsZFJhazAxWTFSQ1NGUnFUa2RTYlhkeVdsWm9ZV0ZHVGsxU01sa3hUak5XV0ZWSFNrNWxWM2gwVGxkT1ZFd3paREphYlVwTVpERlNSVlJ1WjNaaVZ6a3pUbTF3YkdKWVZuaFZSVXBZVlZWT2RWcEliR3ROYld4VVlWWm5lbVZYWkVSVVYxcHNaR3hLUjA1NlJsTmtiRnAyV214Q01tUnVXa05NTWxwSVZWUkNNMU5EZEU5ak1qaDJZWHBLVUU5SVNqRmpWemxJWTFSWk5HSXdUblZWUlZWM1RXeFNjR0ZGY0ZGYU1rNVJaRlJyTUdSdVRqWlhWbVJ3VjBoS00xcElTbFJVYTBaTFpHMXdXR0ZyVVRKT1ZUbFlVMFJvTlZwNlZrUlRSVVkwVGtadk5HTnJTbHBMTVZwNVlXMW9ZVlJIT0hwT2EyZDVUbFJzUkUxdE1YcGFWR3Q0VjJrNVIxRnJhSGhQUlZaTlQwZDRSbVZWWkRCTmJYaERVa1Y0V0ZSdVZsWlpiVFZTVkVad2ExZHFiRE5WU0ZKVVZWTjBZVlJHVW5waWEyeFFZbXBSZW1OSFNrNWlhM2hXWVRCd2FGVnVaSFJTZWtVeFVqRmtVV0pGVWpOTk1tUnZaRVZrZWxWSFZsSlhSMjk2VVRGT1ZWUllSbkJOV0dONVQwWktZV014VG01WFEzUnJUWHBLYzFGc2JGSk9SVmw0VGpOT2FsUldRbHBrYkVvd1VqTldURTlWTVVsaE1EVkpVVzVWTVdSVVdsbFJhMVUwWVVaU1ZWTjZXbFpOUkZKT1pHeHJkazFJUVRGVWF6VkxVVzVqT1ZCVFNYTkpiVkpvWkVkR2NscFlhMmxQYVVwQ1ZWVldRMUZWYUc5a01qQjNWMWRHU2xVd2NHeFZibEpMWWxSV2RVMVZZekprV0Vac1dsZDBXV1JYT1ZsWFJrSnNUbFpXUjFreVZUVlZia1UwVEhwRk1HUXdSa0pSVldjd1pESmFRbGRWY0V4aU1YQktZVWhhYWxSclJsSlpNR1IyVW5wb00xbHNSa3BSYTBaRlVXMDVRMW95ZEhoaFIzUndVbnBzTTAxRlNrTmtNRll6VTBka1dsTnNiRXBYYTJ4Q1ZqRldSVkZyUmtaa1ZURkRVbFZXUlZGVVdqTmhhbWhhVGxkc2NWWlhhSGxPVlZKUllXdEdTbEZyVmtwUlZHTjJUVzFvVFU1c2EzZE9ibWhEVjFWa1IxZFlaRkZpVkdjelVqTktZVlpWU2tObGJuQk9XbFJHYWsxVVZrcGxSVFZMVXpBNGVrMUVUWFpaTW5SelkyczFUVkpVVFRKaVJsb3lTekZ3VjA5WVFqVlViVGx5V1ZVNGVHUkdRWEppTVZKWFpGY3hVR0V4VFRCUVUwbHpTVzVhYkdOdVRuQmlNalJwVDJsSmVVbHBkMmxrU0d4M1dsTkpOa2xyVWtKV1JVWm1VekJXV2tscGQybGFXR2gzWVZoS2FHUkhiSFppYVVrMlRWUlpOVTFVVlhwUFZFbDNUMWd3UFE9PSIsImVtYWlsIjoiIn0sImNsb3VkLm9wZW5zaGlmdC5jb20iOnsiYXV0aCI6ImIzQmxibk5vYVdaMExYSmxiR1ZoYzJVdFpHVjJLMjlqYlY5aFkyTmxjM05mTkRkaU9ETXlOVGd6WVRaak5EYzRNamd4WXpFeE5XVTNZekl6WkdKaE5UQTZOVGRMU0Zrd1ZsVkZOelpTTURKWldsZ3pVMGRNUlRZME1FTktVMXBZV0RkTFVsWTRXVVZLTnpoUk5ERk9SMFEyV1ZjNFZVbEZWMDFJVmt3MFFqbFBNQT09IiwiZW1haWwiOiJyaHBkcy1hZG1pbnMrY2xvdWRAcmVkaGF0LmNvbSJ9LCJwdWxsLnExdzIucXVheS5yaGNsb3VkLmNvbSI6eyJhdXRoIjoiYjNCbGJuTm9hV1owTFhKbGJHVmhjMlV0WkdWMkszQjFiR3c2TURsYVdUUXlWa1kyT0U4NE1VeE5WamhaTms1TU1sZEtXa0pPTjFjeVZ6WllRakpMV0VaVlJUVkJXRmM0TjBaUFVURTJWRU5CUlZCSFVFSk1NVGRDU1E9PSJ9LCJxdWF5LmlvIjp7ImF1dGgiOiJiM0JsYm5Ob2FXWjBMWEpsYkdWaGMyVXRaR1YySzI5amJWOWhZMk5sYzNOZk5EZGlPRE15TlRnellUWmpORGM0TWpneFl6RXhOV1UzWXpJelpHSmhOVEE2TlRkTFNGa3dWbFZGTnpaU01ESlpXbGd6VTBkTVJUWTBNRU5LVTFwWVdEZExVbFk0V1VWS056aFJOREZPUjBRMldWYzRWVWxGVjAxSVZrdzBRamxQTUE9PSIsImVtYWlsIjoicmhwZHMtYWRtaW5zK2Nsb3VkQHJlZGhhdC5jb20ifSwicmVnaXN0cnkuY2kub3BlbnNoaWZ0Lm9yZyI6eyJhdXRoIjoiYzNsemRHVnRMWE5sY25acFkyVmhZMk52ZFc1MExXOXpaQzFwYldGblpYTXRhVzFoWjJVdGNIVnNiR1Z5T21WNVNtaGlSMk5wVDJsS1UxVjZTVEZPYVVselNXMTBjRnBEU1RaSmEwWjNVM3BCZEdJd1dqUmlWekZHVkVWMFIwMVRNREJWUkd0M1kyeEJNRkV5VmtKVVZHUkVUVEJrVjFKR2NIWmlSamxaWldreFJGRnVUV2xtVVM1bGVVcHdZek5OYVU5cFNuSmtWMHBzWTIwMWJHUkhWbnBNTTA1c1kyNWFjRmt5Vm1oWk1rNTJaRmMxTUVscGQybGhNMVpwV2xoS2RWcFlVbXhqZVRWd1luazVlbHBZU2pKaFYwNXNXVmRPYW1JelZuVmtRemwxV1ZjeGJHTXpRbWhaTWxWcFQybEtkbU15VVhSaFZ6Rm9XakpXZWtscGQybGhNMVpwV2xoS2RWcFlVbXhqZVRWd1luazVlbHBZU2pKaFYwNXNXVmRPYW1JelZuVmtRemw2V2xkT2VWcFlVWFZpYlVaMFdsTkpOa2x0YkhSWlYyUnNURmhDTVdKSGVHeGphVEV3WWpKMGJHSnBNREZqVjNNeFlsTkpjMGx0ZERGWmJWWjVZbTFXTUZwWVRYVmhWemgyWXpKV2VXUnRiR3BhVjBacVdUSTVNV0p1VVhaak1sWjVaRzFzYWxwVE1XaFpNazUyWkZjMU1FeHROV2hpVjFWcFQybEtjR0pYUm01YVV6RjNaRmQ0YzFwWVNXbE1RMHB5WkZkS2JHTnROV3hrUjFaNlRHMXNka3d6VG14amJscHdXVEpXYUZreVRuWmtWelV3VEROT2JHTnVXbkJaTWxWMFdWZE9hbUl6Vm5Wa1F6VXhZVmRSYVU5cFNtbE9WRnByVFZSRmVVOVRNREZaVjFreFRGUlJOVTVYVVhSUFJFRjZUME13TVZsWFVUVlplbGt6VGxSYWFFNVVhMmxNUTBwNlpGZEphVTlwU25wbFdFNHdXbGN3Tm1NeVZubGtiV3hxV2xkR2Fsa3lPVEZpYmxFMllqTk9hMHhYYkhSWlYyUnNZM3B3Y0dKWFJtNWFVekYzWkZkNGMxcFlTV2xtVVM1VlMwRTFVVkpQU0VOemJWQjFZbWhoYWtOSU5tWXhXbWN6Vmw5RlFtaDVPRXh4VmpCNVpqaGlWMnRSU1ZReldrMWFVRU5JZFZoUU16Vk1SRVpmWmxsT05XSkpiWFpIVTFWcE9YRnJPRlZaYW1wbVEwZ3hRbUptU0V4SGFFeFJlSFJqU25VemMwVkRVMVZrZDBGeE9XOXJVbmhSV2tnMVZXTlNla3RVUkc5TFoyZzVRVGgwVUdOcWIxTTBiemRIYm1sWVRrcG9iVlpVVjNwUk1GTnFVV2MzYkdNd1JtUjVkalZqZUhabllVTTVTblIxVEVOcWMwZFdXRkZKVEVWSVNXOWZibEp0VTIxdExXWjNabUZ6ZGxocE4xQjZjVEJ6UlVSbVkyWktRVVkxWkVKak5WQlFaa3BFVG1RelgxVmpNelJyZG5aWlZYUTNjVmcxWjBkMmExOXdPRXRRWTBNM2JVRjJPVlp0UlMxS1kyUmlTVWRtYkRGRlpVMXRiSGRSUkhsRmFHeHVRMEpqY0MwMWRETkhibTVzUzJoUlVtTjZYMmRsU210WlExSTVOVlJrYVcxcU1rRnRUbDlIV2s1VE0wVkplRWg1T0VFPSJ9LCJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20iOnsiYXV0aCI6ImZIVm9ZeTF3YjI5c0xUa3lZelkzWW1OaUxUZGlaV1l0TkRGak9TMDRNRGM0TFdZNVpUbG1aakE0TURjNU1qcGxlVXBvWWtkamFVOXBTbE5WZWxWNFRXbEtPUzVsZVVwNlpGZEphVTlwU1hkWmVteHNUV3ByZWxsNlVYaFpNa2t3VGtSQk5FOVVVVEpOVkdkNFdYcHJlVTVYVVROUFZFazBXV2xLT1M1Wk56VXplalppUmxSS2RubG1NV1F0ZVhBMGMxZzNaMjUxUmpGUVlWWm9ha2cyVmtKb1lWZDFUV0ZzWVV4MmVrcGhWMGRGZFcwNGRFUnBOekowVG5GNU0xZFRiRXMzYXpSblYwcElNV0YxTVZSTlppMHRXVXhPTWtSWmNTMTRVRjltVldsb2VFdHFMVEZVYVVWQ05FcG9Ta1U1Ym14YUxWTkZlbGswYjJGQ2NWVktaMEV5WTJsT1IwVjRVbEI2WWtOdVprWldRekpUWVVJM1JFOHdWRGhGTlVsS016RnRTbk16YkcxRFNUVTFYMWhNUzJkVU4xOURSVUpmWVdaMFltUnNTbVJPTkZGTVFWOXlMVGQ1ZUhadFowRldZVk14TlhKTGRtcG1aRmxQT1hsblIwRnJSRk0xWXpSMk1rVTNkRWQzWTJwdWJ6WnJhbnBOY21aS2EzRklVRTVVZURaRFZrZEZSSE4zV1VKMmFIazRVV2xNZFdkRU56VTNiMlJFVTNCeWJWRXdjRFprY0haTGVqSXdZbDh0YTJkNk5rUktkSFZFVGt4U1YyUk9VVlJRTmxOWGIzcGpVV3RyWldKeFVtWmlNMGswVFUxM05UWlRURFZXWkRoaWVXMVFkRzE2UVdKMGNtNU5lVWh4ZHpaeFFVZzBiRjlUYjIxUFptMHhRVkZTUTAxV1EwcENNemhhVEhkcVkyRnNjUzF6V2xaUk9FcEtPWGcwTlRNeU0yMDFNVTV1ZUhKeVEzbGxRalpxVkZsRVRrMXpZVGRFYVhWcFFVZzNWRVJrY0hWS09XUlNZbmRUWDNFMkxWUTVZVk5xWnkxWWMwdGhWWE4yVjA5UGRIVlVkbEV0ZG5GaVFTMHphRlo0Y1hCQ1prZGpkMHRTWnkwMU5XZzViVEZmUW1KU2RuQkZiRVowUVU0MmVqSlhaVGxvV1ZCUVdHNXRPRTVVUVZWeVlVTXlaMnMxUVMxV2QwbFlTVE15UkdOVlRXdGhkWGhMWmtoclYyaElVRnB1T1VSaGMxOUpVbTlNUkZsb1RETm1aa2RCTFV0UVFqVkRUemhZZFhFMmRUSXdNMWhvTVc0Mk9XaEZORE5RTm5OQmJYSlNXVnA1TTNremVrMU1hV1J2V0ZacVVsZHJjemh6ZG1oTVEyRk9MVzE0VGxOWWMwRnNVbEptWm0xRWVrVmthM2hzVWtsc1NWWktXRlYzZHc9PSIsImVtYWlsIjoicmhwZHMtYWRtaW5zK2Nsb3VkQHJlZGhhdC5jb20ifSwicmVnaXN0cnkucmVkaGF0LmlvIjp7ImF1dGgiOiJmSFZvWXkxd2IyOXNMVGt5WXpZM1ltTmlMVGRpWldZdE5ERmpPUzA0TURjNExXWTVaVGxtWmpBNE1EYzVNanBsZVVwb1lrZGphVTlwU2xOVmVsVjRUV2xLT1M1bGVVcDZaRmRKYVU5cFNYZFplbXhzVFdwcmVsbDZVWGhaTWtrd1RrUkJORTlVVVRKTlZHZDRXWHByZVU1WFVUTlBWRWswV1dsS09TNVpOelV6ZWpaaVJsUktkbmxtTVdRdGVYQTBjMWczWjI1MVJqRlFZVlpvYWtnMlZrSm9ZVmQxVFdGc1lVeDJla3BoVjBkRmRXMDRkRVJwTnpKMFRuRjVNMWRUYkVzM2F6Um5WMHBJTVdGMU1WUk5aaTB0V1V4T01rUlpjUzE0VUY5bVZXbG9lRXRxTFRGVWFVVkNORXBvU2tVNWJteGFMVk5GZWxrMGIyRkNjVlZLWjBFeVkybE9SMFY0VWxCNllrTnVaa1pXUXpKVFlVSTNSRTh3VkRoRk5VbEtNekZ0U25NemJHMURTVFUxWDFoTVMyZFVOMTlEUlVKZllXWjBZbVJzU21ST05GRk1RVjl5TFRkNWVIWnRaMEZXWVZNeE5YSkxkbXBtWkZsUE9YbG5SMEZyUkZNMVl6UjJNa1UzZEVkM1kycHVielpyYW5wTmNtWkthM0ZJVUU1VWVEWkRWa2RGUkhOM1dVSjJhSGs0VVdsTWRXZEVOelUzYjJSRVUzQnliVkV3Y0Raa2NIWkxlakl3WWw4dGEyZDZOa1JLZEhWRVRreFNWMlJPVVZSUU5sTlhiM3BqVVd0clpXSnhVbVppTTBrMFRVMTNOVFpUVERWV1pEaGllVzFRZEcxNlFXSjBjbTVOZVVoeGR6WnhRVWcwYkY5VGIyMVBabTB4UVZGU1EwMVdRMHBDTXpoYVRIZHFZMkZzY1MxeldsWlJPRXBLT1hnME5UTXlNMjAxTVU1dWVISnlRM2xsUWpacVZGbEVUazF6WVRkRWFYVnBRVWczVkVSa2NIVktPV1JTWW5kVFgzRTJMVlE1WVZOcVp5MVljMHRoVlhOMlYwOVBkSFZVZGxFdGRuRmlRUzB6YUZaNGNYQkNaa2RqZDB0U1p5MDFOV2c1YlRGZlFtSlNkbkJGYkVaMFFVNDJlakpYWlRsb1dWQlFXRzV0T0U1VVFWVnlZVU15WjJzMVFTMVdkMGxZU1RNeVJHTlZUV3RoZFhoTFpraHJWMmhJVUZwdU9VUmhjMTlKVW05TVJGbG9URE5tWmtkQkxVdFFRalZEVHpoWWRYRTJkVEl3TTFob01XNDJPV2hGTkROUU5uTkJiWEpTV1ZwNU0za3plazFNYVdSdldGWnFVbGRyY3poemRtaE1RMkZPTFcxNFRsTlljMEZzVWxKbVptMUVla1ZrYTNoc1VrbHNTVlpLV0ZWM2R3PT0iLCJlbWFpbCI6InJocGRzLWFkbWlucytjbG91ZEByZWRoYXQuY29tIn19fQo=
# type: kubernetes.io/dockerconfigjson
# ---
# apiVersion: v1
# kind: Secret
# metadata:
#   name: sshkey-cluster-new
#   namespace: 'clusters'
# data:
#   id_rsa.pub: c3NoLXJzYSBBQUFBQjNOemFDMXljMkVBQUFBREFRQUJBQUFDQVFEV1hJWW5lM0RIa3NvNk9aMEF4czhxWm1aSGRwR0srV21VbDlMSXRrWFFneWRDQmlnTzZzSGhkNHNYZkJLYzIwdFc4ZHJsbzF5SWI2K3ZLbUNIRk95My9lTDBkdklDUUNPSDNab1UybFJTRnNhTmpMeC9jb0V6YTlvVFQ4b3BKTVJsbTQrYTBGNlhEeGlUVTFlOEhkL2RjZTljSkhDbDRjbm15b0FtTWRuZVNlSTVUaWtaMzJZMVlXZndsb0xLR2dnTVZpcEVYYlhkdmc0TkZ1S0tzdEx2ODQzOFp0NmNzWVNOZUpmaDgzNXMza244akhVdHgrQmtaWDMzK00ybkJmcDFGZTFIYTVIMzJSelIwZkNzZTdTbG92R0JpQW50KzFsK2pwSzhzZkRzcm5LVVo3ZXU0dFFvVHN3NTdjSmN5Wk1TZ0EydSsxTVNEeHNla1lUQXlNMFB2US9OSkJ4L3o2NC9nZHNsUS95ZE5ETGZEclNiU1FjWEsxT1FTazRyRTViNHBDZUNwUDVibmFOakQ5ODZuc2JmNkZXMTh0dTVIUjRIOTVOV1dDbGJOVnBHT21uVG9Hc0pyYUZYbm5CNWgyS0ZkTnR1TitxRUZweUx3N1A4Ky9XZTBJdThGbWxIVWNTZGVVU21WTkxiSUdwNnlTNVR0QThDZFZFUGx5ZDFrcWdjLzAxLy9lalJUUUxXR0piY3ZaaUgySDczbUs0amk3UVVRSUtiYXRNWHNoZTBhaXBqd0FGRFJhUzJlM29KUjY4V0ZNYUh3TTlLMnJUZTRDbUZYQ1FycTNFM0ZWV1MrbjRldVZxYnk1NVorQURuK0swcVdQbFpjY2puMDU3SHY3bWVZTlkxMUs1cVFqdVlrTDFmTG00bjEvS0VLN3VwMzlNTjk4MmM4d0ZkNlE9PSByYWtlc2hrdW1hcm1hbGxhbUBSYWtlc2hzLU1hY0Jvb2stUHJv
# ---
# apiVersion: hypershift.openshift.io/v1beta1
# kind: NodePool
# metadata:
#   name: 'devpool'
#   namespace: 'clusters'
# spec:
#   arch: amd64
#   clusterName: 'new'
#   replicas: 3
#   management:
#     autoRepair: false
#     upgradeType: Replace
#   platform:
#     type: KubeVirt
#     kubevirt:
#       compute:
#         cores: 2
#         memory: 8Gi
#       rootVolume:
#         type: Persistent
#         persistent:
#           size: 32Gi
#   release:
#     image: quay.io/openshift-release-dev/ocp-release:4.14.29-multi
# ---
# apiVersion: cluster.open-cluster-management.io/v1
# kind: ManagedCluster
# metadata:
#   annotations:
#     import.open-cluster-management.io/hosting-cluster-name: local-cluster 
#     import.open-cluster-management.io/klusterlet-deploy-mode: Hosted
#     open-cluster-management/created-via: hypershift
#   labels:
#     cloud: BareMetal
#     vendor: OpenShift
#     name: 'new'
#     cluster.open-cluster-management.io/clusterset: 'managed'
#     environment: 'dev'
#   name: 'new'
# spec:
#   hubAcceptsClient: true
# ---
# apiVersion: agent.open-cluster-management.io/v1
# kind: KlusterletAddonConfig
# metadata:
#   name: 'new'
#   namespace: 'new'
# spec:
#   clusterName: 'new'
#   clusterNamespace: 'new'
#   clusterLabels:
#     cloud: BareMetal
#     vendor: OpenShift
#   applicationManager:
#     enabled: true
#   policyController:
#     enabled: true
#   searchCollector:
#     enabled: true
#   certPolicyController:
#     enabled: true
#   iamPolicyController:
#     enabled: true
# ---